name: SkyKronoApp
on:
  push:
    branches:
      - main
      - develop
      - test_workflow
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Run Install Dependences
        run: npm i
      - name: Run Build Production
        run: npm run production
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/*
  unit-test:
    name: Unit Test Jasmine/Karma
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}
      - name: Run All Unit Tests
        run: npm run unit-test
      - uses: actions/cache@v3
        id: build-unit-test
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/upload-artifact@v3
        with:
          name: coverage-unit-test
          path: coverage-unit-test/*
  # e2e-testing-mobile:
  #   name: E2E Cypress Mobile
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - uses: actions/cache@v2
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}
  #     - name: Install Cypress Dependences
  #       run: ./node_modules/.bin/cypress install --force
  #     - name: E2E Testing Mobile
  #       continue-on-error: true
  #       run: npm run e2e:ci:mobile
  #     - name: 'Upload Coverage E2E Mobile'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: reports-e2e-mobile
  #         path: coverage-e2e/*
  #     - name: 'Upload Video E2E Mobile'
  #       uses: actions/upload-artifact@v3
  #       continue-on-error: true
  #       with:
  #         name: e2e-videos-mobile
  #         path: cypress/videos/*
  #     - name: 'Upload Screenshot E2E Mobile'
  #       uses: actions/upload-artifact@v3
  #       continue-on-error: true
  #       with:
  #         name: e2e-screenshots-mobile
  #         path: cypress/screenshots/*
  # e2e-testing-desktop:
  #   name: E2E Cypress Desktop
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 0
  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 16
  #     - uses: actions/cache@v2
  #       id: restore-build
  #       with:
  #         path: ./*
  #         key: ${{ github.sha }}
  #     - name: Install Cypress Dependences
  #       run: ./node_modules/.bin/cypress install --force
  #     - name: E2E Testing Desktop
  #       continue-on-error: true
  #       run: npm run e2e:ci
  #     - name: 'Upload Coverage E2E Desktop'
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: reports-e2e-desktop
  #         path: coverage-e2e/*
  #     - name: 'Upload Video E2E Desktop'
  #       uses: actions/upload-artifact@v3
  #       continue-on-error: true
  #       with:
  #         name: e2e-videos-desktop
  #         path: cypress/videos/*
  #     - name: 'Upload Screenshot E2E Desktop'
  #       uses: actions/upload-artifact@v3
  #       continue-on-error: true
  #       with:
  #         name: e2e-screenshots-desktop
  #         path: cypress/screenshots/*
  sonarcloud:
    name: SonarCloud
    needs: [build, unit-test]
    # needs: [build, unit-test, e2e-testing-desktop, e2e-testing-mobile]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/cache@v3
        id: build-unit-test
        with:
          path: ./*
          key: ${{ github.sha }}
      - uses: actions/download-artifact@v3
        with:
          name: coverage-unit-test
          path: coverage-unit-test
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  web-deploy:
    name: Deploy
    needs: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@4.3.2
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USER }}
          password: ${{ secrets.FTP_PASSWORD }}
          dry-run: true
          protocol: ftps
          state-name: /.sync-state.json
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/*
